$mainMod = SUPER
$scrPath = /home/damiska/.config/hypr/scripts/
#*  Variables 
$TERMINAL = kitty
$EDITOR = code
$EXPLORER = pcmanfm
$BROWSER = zen

$wm=Window Management
$d=[$wm]
bindd = $mainMod, Q, $d close focused window, exec, $scrPath/dontkillsteam.sh
bindd = $mainMod, Delete, $d kill hyprland session, exit
bindd = $mainMod, T, $d Toggle floating,  exec, hyprctl --batch "dispatch togglefloating; dispatch resizeactive exact 95% 95%; dispatch centerwindow"
bindd = $mainMod, F, $d toggle fullscreen, fullscreen
bindd = $mainMod, L, $d lock screen, exec, lockscreen.sh
bindd = $mainMod Shift, F, $d toggle pin on focused window, exec, $scrPath/windowpin.sh
bindd = $mainMod Control, Q, $d logout menu, exec, $scrPath/logoutlaunch.sh
#bindd = Alt_R, Control_R, $d toggle waybar and reload config, exec, killall waybar || (env reload_flag=1 $scrPath/wbarconfgen.sh)
#bindd = ALT_R, Control_R,toggle waybar, exec, killall waybar || waybar # toggle waybar without reloading, this is faster

#$d=[$wm|Group Navigation]
#bindd = $mainMod Control, H, $d change active group backwards   , changegroupactive, b
#bindd = $mainMod Control, L, $d change active group forwards  , changegroupactive, f

$d=[$wm|Change focus]
bindd = $mainMod, Left, $d focus left, movefocus, l
bindd = $mainMod, Right, $d focus right , movefocus, r
bindd = $mainMod, Up, $d focus up , movefocus, u
bindd = $mainMod, Down , $d focus down, movefocus, d
bindd = $mainMod, Tab,$d Cycle focus, cyclenext

$d=[$wm|Resize Active Window]
# Resize windows
bindde = $mainMod Shift, Right, $d resize window right , resizeactive, 30 0
bindde = $mainMod Shift, Left, $d resize window left, resizeactive, -30 0
bindde = $mainMod Shift, Up, $d resize window up, resizeactive, 0 -30
bindde = $mainMod Shift, Down, $d resize  window down, resizeactive, 0 30

# Move active window around current workspace with mainMod + Shift + Control [←→↑↓]
$d=[$wm|Move active window across workspace]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
bindde = $mainMod Alt, left, Move active window to the left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
bindde = $mainMod Alt Control, right, Move active window to the right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
bindde = $mainMod Alt Control, up, Move active window up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
bindde = $mainMod Alt Control, down, Move active window down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d

# Move/Resize focused window
$d=[$wm|Move & Resize with mouse]
binddm = $mainMod, mouse:272, $d hold to move window, movewindow
binddm = $mainMod, mouse:273, $d hold to resize window, resizewindow
#binddm = $mainMod, Z, $d hold to move window , movewindow
#binddm = $mainMod, X, $d hold to resize window, resizewindow

# Toggle focused window split
$d=[$wm]
bindd = $mainMod, J, $d toggle split, togglesplit

$l=Launcher
$d=[$l|Apps]
bindd = $mainMod, return, $d terminal emulator , exec, $TERMINAL
bindd = $mainMod Alt, return, $d dropdown terminal , exec, [float; move 20% 5%; size 60% 60%] $TERMINAL
bindd = $mainMod, E, $d file explorer , exec, $EXPLORER
bindd = $mainMod, V, $d text editor , exec, $EDITOR
bindd = $mainMod, X, $d web browser , exec, $BROWSER
bind = $mainMod, O, exec, obsidian
bind = $mainMod, B, exec, beeper
bind = $mainMod, S, exec, spotify
bind = $mainMod, D, exec, $scrPath/focus-mode.sh
bindd = Control Shift, Escape, $d system monitor , exec, $scrPath/sysmonlaunch.sh

$d=[$l|Rofi menus]
$rofi-launch=$scrPath/rofilaunch.sh
bindd = $mainMod, A, $d application finder , exec, pkill -x rofi || rofi -show drun -show-icons
bindd = Control, TAB, $d window switcher , exec, pkill -x rofi || $rofi-launch w
bindd = $mainMod Shift, E, $d file finder , exec, pkill -x rofi || $rofi-launch f
bindd = $mainMod, comma, $d emoji  picker , exec, pkill -x rofi || $scrPath/emoji-picker.sh # launch emoji picker
bindd = $mainMod, period, $d glyph picker , exec, pkill -x rofi || $scrPath/glyph-picker.sh # launch glyph picker
#bindd = $mainMod, V, $d clipboard ,  exec, pkill -x rofi || $scrPath/cliphist.sh -c # launch clipboard,
bindd = $mainMod Shift, V, $d clipboard manager , exec, pkill -x rofi || $scrPath/cliphist.sh # launch clipboard Manager
bindd = $mainMod Shift, A, $d select rofi launcher , exec, pkill -x rofi || $scrPath/rofiselect.sh # launch select menu


$hc=Hardware Controls
$d=[$hc|Audio]
binddl  = , F10, $d toggle mute output , exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binddl  = , XF86AudioMute,$d  toggle mute output, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
binddel = , F11, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
binddel = , F12, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume
binddl  = , XF86AudioMicMute,$d un/mute microphone  , exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
binddel = , XF86AudioLowerVolume, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
binddel = , XF86AudioRaiseVolume, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume

$d=[$hc|Media]
binddl  = , XF86AudioPlay,$d play media, exec, playerctl play-pause # toggle between media play and pause
binddl  = , XF86AudioPause,$d pause media, exec, playerctl play-pause # toggle between media play and pause
binddl  = , XF86AudioNext,$d next media  , exec, playerctl next # media next
binddl  = , XF86AudioPrev,$d  previous media , exec, playerctl previous # media previous

$d=[$hc|Brightness]
binddel = , XF86MonBrightnessUp, $d increase brightness , exec, brightnessctl set +10% # increase brightness
binddel = , XF86MonBrightnessDown, $d decrease brightness , exec, brightnessctl set 10%- # decrease brightness

$d=[$ut|Screen Capture]
bindd = $mainMod Shift, P, $d color picker, exec, hyprpicker -an # Pick color (Hex) >> clipboard#
bindd = $mainMod, P, $d snip screen , exec, $scrPath/screenshot.sh s # partial screenshot capture
bindd = $mainMod Control, P, $d freeze and snip screen, exec, $scrPath/screenshot.sh sf # partial screenshot capture (frozen screen)
binddl = $mainMod Alt, P, $d print monitor , exec, $scrPath/screenshot.sh m # monitor screenshot capture
binddl = , Print, $d print all monitors , exec, $scrPath/screenshot.sh p # all monitors screenshot capture

# TODO Make a main rofi menu for these selectors
$rice=Theming and Wallpaper
$d=[$rice]
bindd = $mainMod Alt, Right, $d next global wallpaper , exec, $scrPath/wallpaper.sh -Gn # next global wallpaper
bindd = $mainMod Alt, Left, $d previous global wallpaper , exec, $scrPath/wallpaper.sh -Gp # previous global wallpaper
bindd = $mainMod Shift, W, $d select a global wallpaper , exec, pkill -x rofi || $scrPath/wallpaper.sh -SG # launch wallpaper select menu
bindd = $mainMod Alt, Up, $d next waybar layout , exec, $scrPath/wbarconfgen.sh n # next waybar mode
bindd = $mainMod Alt, Down, $d previous waybar layout , exec, $scrPath/wbarconfgen.sh p # previous waybar mode
bindd = $mainMod Shift, R, $d wallbash mode selector , exec, pkill -x rofi || $scrPath/wallbashtoggle.sh -m # launch wallbash mode select menu
bindd = $mainMod Shift, T, $d select a theme, exec, pkill -x rofi || $scrPath/themeselect.sh # launch theme select menu
bindd = $mainMod+Shift, Y, $d select animations, exec, pkill -x rofi || $scrPath/animations.sh --select # launch animations select menu



$ws=Workspaces
$d=[$ws|Navigation]
bindd = $mainMod, plus, $d navigate to workspace 1 , workspace, 1
bindd = $mainMod, ecaron, $d navigate to workspace 2 , workspace, 2
bindd = $mainMod, scaron, $d navigate to workspace 3 , workspace, 3
bindd = $mainMod, ccaron, $d navigate to workspace 4 , workspace, 4
bindd = $mainMod, zcaron, $d navigate to workspace 5 , workspace, 5
bindd = $mainMod, yacute, $d navigate to workspace 6 , workspace, 6
bindd = $mainMod, aacute, $d navigate to workspace 7 , workspace, 7
bindd = $mainMod, iacute, $d navigate to workspace 8 , workspace, 8
bindd = $mainMod, eacute, $d navigate to workspace 9 , workspace, 9
bindd = $mainMod, parenleft, $d navigate to workspace 10 , workspace, 10

#$d=[$ws|Navigation|Relative workspace]
#bindd = $mainMod Control, Right, $d change active workspace forwards  , workspace, r+1
#bindd = $mainMod Control, Left, $d change active workspace backwards , workspace, r-1

#$d=[$ws|Navigation]
#bindd = $mainMod Control, Down, $d navigate to the nearest empty workspace , workspace, empty

# Move focused window to a workspace
$d=[$ws|Move window to workspace]
bindd = $mainMod SHIFT, plus, $d move to workspace 1 , movetoworkspace, 1
bindd = $mainMod SHIFT, ecaron, $d move to workspace 2 , movetoworkspace, 2
bindd = $mainMod SHIFT, scaron, $d move to workspace 3 , movetoworkspace, 3
bindd = $mainMod SHIFT, ccaron, $d move to workspace 4 , movetoworkspace, 4
bindd = $mainMod SHIFT, zcaron, $d move to workspace 5 , movetoworkspace, 5
bindd = $mainMod SHIFT, yacute, $d move to workspace 6 , movetoworkspace, 6
bindd = $mainMod SHIFT, aacute, $d move to workspace 7 , movetoworkspace, 7
bindd = $mainMod SHIFT, iacute, $d move to workspace 8 , movetoworkspace, 8
bindd = $mainMod SHIFT, eacute, $d move to workspace 9 , movetoworkspace, 9
bindd = $mainMod SHIFT, parenleft, $d move to workspace 10 , movetoworkspace, 10

# Move focused window to a relative workspace
$d=[$ws]
bindd = $mainMod Control+Alt, Right, $d move window to next relative workspace , movetoworkspace, r+1
bindd = $mainMod Control+Alt, Left, $d move window to previous relative workspace , movetoworkspace, r-1

#kando
#bind = , mouse:274, global, kando:main-menu


# Scroll through existing workspaces
$d=[$ws|Navigation]
bindd = $mainMod, mouse_down, $d next workspace, workspace, e+1
bindd = $mainMod, mouse_up, $d previous workspace, workspace, e-1

$d=#! unset the group name


